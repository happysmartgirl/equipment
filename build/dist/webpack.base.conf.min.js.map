{"version":3,"sources":["webpack.base.conf.js"],"names":["path","require","config","utils","join","__dirname","dir","module","exports","context","resolve","app","build","assetsRoot","output","process","filename","assetsPublicPath","publicPath","dev","extensions","alias","vue$","@","rules","test","loader","options","vueLoaderConfig","include","limit","name","assetsPath","loaders","setImmediate","fs","child_process","dgram","net","tls"],"mappings":"AAAA,aACA,IAAMA,KAAOC,QAAQ,QAAfD,MAAOC,QAAQ,WAEfC,OAASD,QAAQ,aADjBE,gBAAgBF,QAAtB,qBACA,SAAMC,QAASD,GAIb,OAAOD,KAAKI,KAAKC,UAAW,KAAMC,GACnCC,OAAAC,QAAA,CAKCC,QAAST,KAAKU,QAAQL,UAAW,OADnCE,MAAOC,CACLC,IAAO,iBAELE,OAAK,CAHQX,KAAAE,OAAAU,MAAAC,WAKfC,SAAQ,YACNd,WADM,eACMe,QAAOF,IAAAA,SACnBG,OAAUJ,MAAAK,iBACVC,OAAUC,IAAEJ,kBAIdL,QAAS,CACPU,WAAY,CAAC,MAAO,OAAQ,SAC5BC,MAAO,CACLC,KAAQ,sBACRC,IAAKb,QAAQ,SAGjBH,OAAQ,CACNiB,MAAO,CAEHC,CACAC,KAAQ,SACRC,OAASC,aAEXD,QAAAC,iBAEEF,CACAG,KAAO,QAETH,OAAA,eACED,QAAM,CAAAf,QAAA,OAAAA,QAAA,QADRA,QAAA,4CAGEiB,CACEG,KAAK,gCACLC,OAAM5B,aAFCwB,QAAA,CAKXG,MAAA,IACMC,KAAE5B,MAAA6B,WAAA,+BAGJF,CACAC,KAAM5B,4CAFCuB,OAAA,aAKXC,QAAA,CACMG,MAAE,IACNJ,KAAQvB,MAAA6B,WAFV,iCAKID,CAFON,KAAA,iCAKXC,OAAA,aACED,QAAM,CACNQ,MAAU,IArCPF,KAAA5B,MAAA6B,WAAA,iCA0CP,CACAP,KAAA,UACAS,QAAY,CAAE,QAHV,MAAA,WAOJC,KAAI,CAGJC,cAAa,EAJbC,MAAO,QACPF,GAAI,QACJG,IAAK,QACLC,IAAK,QACLH,cAAe","file":"webpack.base.conf.min.js","sourcesContent":["'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst config = require('../config')\nconst vueLoaderConfig = require('./vue-loader.conf')\n\nfunction resolve (dir) {\n  return path.join(__dirname, '..', dir)\n}\n\n\n\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: {\n    app: './src/main.js'\n  },\n  output: {\n    path: config.build.assetsRoot,\n    filename: '[name].js',\n    publicPath: process.env.NODE_ENV === 'production'\n      ? config.build.assetsPublicPath\n      : config.dev.assetsPublicPath\n  },\n  resolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src'),\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: vueLoaderConfig\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        include: [resolve('src'), resolve('test'), resolve('node_modules/webpack-dev-server/client')]\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('media/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.scss$/,\n        loaders: [\"style\", \"css\", \"sass\"]\n      }\n    ]\n  },\n  node: {\n    // prevent webpack from injecting useless setImmediate polyfill because Vue\n    // source contains it (although only uses it if it's native).\n    setImmediate: false,\n    // prevent webpack from injecting mocks to Node native modules\n    // that does not make sense for the client\n    dgram: 'empty',\n    fs: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty'\n  }\n}\n"]}